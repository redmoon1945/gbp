<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>AboutDialog</class>
 <widget class="QDialog" name="AboutDialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>841</width>
    <height>700</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>About Graphical Budget Planner</string>
  </property>
  <property name="modal">
   <bool>true</bool>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_2">
   <item>
    <layout class="QVBoxLayout" name="verticalLayout">
     <item>
      <widget class="QLabel" name="appLabel">
       <property name="font">
        <font>
         <pointsize>16</pointsize>
         <bold>true</bold>
        </font>
       </property>
       <property name="text">
        <string>---</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QLabel" name="buildOnLabel">
       <property name="font">
        <font>
         <italic>true</italic>
        </font>
       </property>
       <property name="text">
        <string>---</string>
       </property>
      </widget>
     </item>
     <item>
      <spacer name="verticalSpacer">
       <property name="orientation">
        <enum>Qt::Orientation::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Policy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QTabWidget" name="tabWidget">
       <property name="currentIndex">
        <number>0</number>
       </property>
       <property name="movable">
        <bool>false</bool>
       </property>
       <widget class="QWidget" name="about">
        <attribute name="title">
         <string>About</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_8">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_7">
           <item>
            <layout class="QFormLayout" name="formLayout">
             <property name="labelAlignment">
              <set>Qt::AlignmentFlag::AlignRight|Qt::AlignmentFlag::AlignTrailing|Qt::AlignmentFlag::AlignVCenter</set>
             </property>
             <item row="3" column="0">
              <widget class="QLabel" name="label">
               <property name="text">
                <string>Config file :</string>
               </property>
              </widget>
             </item>
             <item row="3" column="1">
              <widget class="QPlainTextEdit" name="configFilePlainTextEdit">
               <property name="readOnly">
                <bool>true</bool>
               </property>
              </widget>
             </item>
             <item row="1" column="0">
              <widget class="QLabel" name="label_2">
               <property name="text">
                <string>Log file :</string>
               </property>
              </widget>
             </item>
             <item row="1" column="1">
              <widget class="QPlainTextEdit" name="logFilePlainTextEdit">
               <property name="readOnly">
                <bool>true</bool>
               </property>
              </widget>
             </item>
             <item row="0" column="0">
              <widget class="QLabel" name="label_3">
               <property name="text">
                <string>What it is :</string>
               </property>
              </widget>
             </item>
             <item row="0" column="1">
              <widget class="QPlainTextEdit" name="plainTextEdit">
               <property name="readOnly">
                <bool>true</bool>
               </property>
               <property name="plainText">
                <string>Graphical Budget Planner (GBP) is a Qt desktop application intended to ease significantly the process of creating and maintaining a personal budget. It allows to :

=&gt; See graphically the evolution of your cash balance through time, at any given moment in a period covering the next 100 years !

=&gt; Easy zooming : use middle mouse button or dedicated UI buttons 

=&gt; Easy panning : just left-click &amp; hold, then move mouse

=&gt; Specify painlessly all your forecasted income/expense budget items, with flexibility to define periodic or irregular flows of incomes/expenses.

=&gt; Optionaly define inflation, either as a constant value or a complex series of changing values.

=&gt; Optionaly define a custom monthly growth pattern for any income/expense specification , expressed either as a constant value or a complex series of changing values.

=&gt; Perform automatically different types of analysis on your data, like relative weight of incomes/expenses over custom period, monthly and yearly reports.

=&gt; Your data is not locked in : all scenarios are formatted as JSON file, and resulting/analysis data are exportable in CSV format.

GBP is all about CASH BALANCE FORECASTING : the key principle adopted is to take into consideration the FUTURE incomes/expenses expected. Consequently, this is not the right tool if you want to know how and when your money has been spent in the past (that is &quot;before today&quot;).

</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="license">
        <attribute name="title">
         <string>Licence</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_4">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_3">
           <item>
            <widget class="QPlainTextEdit" name="plainTextEdit_3">
             <property name="plainText">
              <string>This application (named graphical-budget-planner, a.k.a. GBP) and all its source code are licensed under the GNU Affero General Public License version 3 or later ( that is AGPL-3.0-or-later). It's Free Software. See https://www.gnu.org/licenses/#AGPL/  for the details of the licence.

graphical-budget-planner is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 

(c) Copyright 2024, Claude Dumas &lt;claudedumas63@protonmail.com&gt;</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="tab">
        <attribute name="title">
         <string>Source Code</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_10">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_9">
           <item>
            <widget class="QPlainTextEdit" name="plainTextEdit_4">
             <property name="plainText">
              <string>Source code of graphical-budget-planner can be found on Codeberg at this URL : 
https://codeberg.org/claude_dumas/gbp</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="credits">
        <attribute name="title">
         <string>Credits</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_6">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_5">
           <item>
            <widget class="QPlainTextEdit" name="plainTextEdit_2">
             <property name="plainText">
              <string>Special thanks to : 

* Tobias Leupold : code to calculate difference between 2 dates
  -&gt; see https://nasauber.de/blog/2019/calculating-the-difference-between-two-qdates/

* QCustomPlot : A Qt C++ widget for plotting and data visualization
  -&gt; see https://www.qcustomplot.com/

* The Qt Team :  Superb cross-plateform GUI Framework
  -&gt; see https://www.qt.io/</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
      </widget>
     </item>
     <item>
      <spacer name="verticalSpacer_2">
       <property name="orientation">
        <enum>Qt::Orientation::Vertical</enum>
       </property>
       <property name="sizeType">
        <enum>QSizePolicy::Policy::Fixed</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>20</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <layout class="QHBoxLayout" name="horizontalLayout">
       <item>
        <spacer name="horizontalSpacer">
         <property name="orientation">
          <enum>Qt::Orientation::Horizontal</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>40</width>
           <height>20</height>
          </size>
         </property>
        </spacer>
       </item>
       <item>
        <widget class="QPushButton" name="closePushButton">
         <property name="text">
          <string>Close</string>
         </property>
        </widget>
       </item>
      </layout>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
